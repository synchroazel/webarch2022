{"ast":null,"code":"import { DatePipe } from '@angular/common';\nimport { CacheService } from \"../services/cache.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/parliament-scot.service\";\nimport * as i3 from \"@angular/common\";\nfunction MemberDetailComponent_div_0_img_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 11);\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"src\", ctx_r5.MemberPhotoURL, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction MemberDetailComponent_div_0_img_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 12);\n  }\n}\nfunction MemberDetailComponent_div_0_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\")(2, \"b\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"p\", 13);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const party_r9 = ctx.$implicit;\n    const i_r10 = ctx.index;\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(party_r9);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"from \", ctx_r7.MemberFromDates[i_r10], \" to \", ctx_r7.MemberToDates[i_r10], \"\");\n  }\n}\nfunction MemberDetailComponent_div_0_div_12_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 16)(1, \"button\");\n    i0.ɵɵtext(2, \"parliament website\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(3);\n    i0.ɵɵpropertyInterpolate(\"href\", ctx_r11.MemberWebsiteGov, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction MemberDetailComponent_div_0_div_12_a_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 16)(1, \"button\");\n    i0.ɵɵtext(2, \"personal website\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(3);\n    i0.ɵɵpropertyInterpolate(\"href\", ctx_r12.MemberWebsitePersonal, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction MemberDetailComponent_div_0_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtemplate(1, MemberDetailComponent_div_0_div_12_a_1_Template, 3, 1, \"a\", 15);\n    i0.ɵɵtemplate(2, MemberDetailComponent_div_0_div_12_a_2_Template, 3, 1, \"a\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.MemberWebsiteGov);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.MemberWebsitePersonal);\n  }\n}\nfunction MemberDetailComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 4);\n    i0.ɵɵtemplate(2, MemberDetailComponent_div_0_img_2_Template, 1, 1, \"img\", 5);\n    i0.ɵɵtemplate(3, MemberDetailComponent_div_0_img_3_Template, 1, 0, \"img\", 6);\n    i0.ɵɵelementStart(4, \"div\", 7);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 8);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"br\");\n    i0.ɵɵelementStart(9, \"h3\");\n    i0.ɵɵtext(10, \"Parties:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(11, MemberDetailComponent_div_0_div_11_Template, 6, 3, \"div\", 9);\n    i0.ɵɵtemplate(12, MemberDetailComponent_div_0_div_12_Template, 3, 2, \"div\", 10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    const _r3 = i0.ɵɵreference(4);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.MemberPhotoURL);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.MemberPhotoURL);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.MemberFullname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.MemberBirthDate);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.MemberParties);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.MemberWebsiteGov || ctx_r0.MemberWebsitePersonal)(\"ngIfElse\", _r3);\n  }\n}\nfunction MemberDetailComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Loading member data...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MemberDetailComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"i\");\n    i0.ɵɵtext(2, \"No websites available\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class MemberDetailComponent {\n  constructor(route, ParliamentScot, datePipe) {\n    this.route = route;\n    this.ParliamentScot = ParliamentScot;\n    this.datePipe = datePipe;\n    // used to check if all data is loaded and template can be displayed\n    this.memberLoaded = false;\n    this.partiesLoaded = false;\n    this.websitesLoaded = false;\n    this.cache = CacheService;\n  }\n  ngOnInit() {\n    const id = this.route.snapshot.paramMap.get('id');\n    if (id != null) {\n      // resolve (:fetch from cache or APIs) all data needed to display\n      this.resolveMember(id).then(data => {\n        // get the member's name, birthdate and photo using getMember()\n        this.MemberFullname = data.ParliamentaryName;\n        this.MemberBirthDate = this.datePipe.transform(data.BirthDate, \"MMMM dd, yyyy\");\n        this.MemberPhotoURL = data.PhotoURL;\n        this.memberLoaded = true; // all basic member info has been handled\n      });\n\n      this.resolveMemberParties(id).then(data => {\n        // get the list of Parties the member has been in using getMemberParties() and getParties\n        let inCharge; // to check if we need to change the last toDate with \"present\"\n        let memberPartiesData = data.filter(memberParties => memberParties.PersonID == id);\n        let memberPartiesIds = new Array();\n        let fromDates = new Array();\n        let toDates = new Array();\n        for (let memberPartyData of memberPartiesData) {\n          memberPartiesIds.push(memberPartyData.PartyID);\n          fromDates.push(memberPartyData.ValidFromDate);\n          if (memberPartyData.ValidUntilDate != null) {\n            toDates.push(memberPartyData.ValidUntilDate);\n          } else {\n            // if still in the party, set the toDate to current date instead of null\n            inCharge = true;\n            toDates.push(new Date());\n          }\n        }\n        // fromDates and toDates may come unsorted! Better do the following\n        fromDates = fromDates.sort();\n        toDates = toDates.sort();\n        // if some parties listed are \"contiguous\", merge them into a single item\n        let memberPartiesIdsRed = new Array();\n        let fromDatesRed = new Array();\n        let toDatesRed = new Array();\n        for (let i = 0; i < memberPartiesIds.length; i++) {\n          if (memberPartiesIds[i] != memberPartiesIds[i - 1]) {\n            fromDatesRed.push(fromDates[i]);\n            memberPartiesIdsRed.push(memberPartiesIds[i]);\n          }\n          if (memberPartiesIds[i] != memberPartiesIds[i + 1]) {\n            toDatesRed.push(toDates[i]);\n          }\n        }\n        // dates are converted to string and party ids to party names\n        let memberPartiesNames = new Array();\n        let fromDatesStr = new Array();\n        let toDatesStr = new Array();\n        this.resolveParties().then(data => {\n          memberPartiesIdsRed.forEach((memberPartyId, i) => {\n            let party = data.find(party => party.ID == memberPartyId);\n            memberPartiesNames.push(party.ActualName);\n            fromDatesStr.push(this.datePipe.transform(fromDatesRed[i], \"MM/yyyy\"));\n            toDatesStr.push(this.datePipe.transform(toDatesRed[i], \"MM/yyyy\"));\n          });\n          // if the member is currently in the party, set the toDate to \"present\"\n          if (inCharge) {\n            toDatesStr[toDatesStr.length - 1] = \"present\";\n          }\n          this.partiesLoaded = true; // all the parties data has been handled\n        });\n        // finally assign all the data to the variables to be used in the template\n        this.MemberParties = memberPartiesNames;\n        this.MemberFromDates = fromDatesStr;\n        this.MemberToDates = toDatesStr;\n      });\n      this.resolveWebsites().then(data => {\n        let websitesData = data.filter(websites => websites.PersonID == id);\n        let website1URL = websitesData.filter(websitesData => websitesData.WebSiteTypeID == 1);\n        let website2URL = websitesData.filter(websitesData => websitesData.WebSiteTypeID == 2);\n        let website3URL = websitesData.filter(websitesData => websitesData.WebSiteTypeID == 3);\n        // the first 2 urls, if both available, redirect to the same gov. website\n        if (website2URL.length > 0) {\n          this.MemberWebsiteGov = website2URL[0].WebURL;\n        }\n        if (website1URL.length > 0) {\n          this.MemberWebsiteGov = website1URL[0].WebURL;\n        }\n        if (website3URL.length > 0) {\n          this.MemberWebsitePersonal = website3URL[0].WebURL;\n        }\n        this.websitesLoaded = true; // all websites data has been handled\n      });\n    }\n  }\n\n  resolveMember(id) {\n    /* Wrap getMember() and make use of caching */\n    if (this.cache.get('memberData-' + id)) {\n      console.log('[INFO] Member data found in cache, using cached data.');\n      return Promise.resolve(this.cache.get('memberData-' + id));\n    } else {\n      console.log('[INFO] Member data not found in cache, fetching data.');\n      return new Promise(resolve => {\n        this.ParliamentScot.getMember(id).subscribe(data => {\n          this.cache.set('memberData-' + id, data);\n          resolve(data);\n        });\n      });\n    }\n  }\n  resolveMemberParties(id) {\n    /* Wrap getMemberParties() and make use of caching */\n    if (this.cache.get('memberPartiesData-' + id)) {\n      console.log('[INFO] Member parties list found in cache, using cached data.');\n      return Promise.resolve(this.cache.get('memberPartiesData-' + id));\n    } else {\n      console.log('[INFO] Member parties list not found in cache, fetching data.');\n      return new Promise(resolve => {\n        this.ParliamentScot.getMemberParties(id).subscribe(data => {\n          this.cache.set('memberPartiesData-' + id, data);\n          resolve(data);\n        });\n      });\n    }\n  }\n  resolveParties() {\n    /* Wrap getParties() and make use of caching */\n    if (this.cache.get('partiesData')) {\n      console.log('[INFO] Parties list found in cache, using cached data.');\n      return Promise.resolve(this.cache.get('partiesData'));\n    } else {\n      console.log('[INFO] Parties list not found in cache, fetching data.');\n      return new Promise(resolve => {\n        this.ParliamentScot.getParties().subscribe(data => {\n          this.cache.set('partiesData', data);\n          resolve(data);\n        });\n      });\n    }\n  }\n  resolveWebsites() {\n    /* Wrap getWebsites() and make use of caching */\n    if (this.cache.get('websitesData')) {\n      console.log('[INFO] Websites list found in cache, using cached data.');\n      return Promise.resolve(this.cache.get('websitesData'));\n    } else {\n      console.log('[INFO] Websites list not found in cache, fetching data.');\n      return new Promise(resolve => {\n        this.ParliamentScot.getWebsites().subscribe(data => {\n          this.cache.set('websitesData', data);\n          resolve(data);\n        });\n      });\n    }\n  }\n}\nMemberDetailComponent.ɵfac = function MemberDetailComponent_Factory(t) {\n  return new (t || MemberDetailComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ParliamentScotService), i0.ɵɵdirectiveInject(i3.DatePipe));\n};\nMemberDetailComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MemberDetailComponent,\n  selectors: [[\"app-member-detail\"]],\n  features: [i0.ɵɵProvidersFeature([DatePipe])],\n  decls: 5,\n  vars: 2,\n  consts: [[\"class\", \"container\", 4, \"ngIf\", \"ngIfElse\"], [\"isLoading\", \"\"], [\"noWebsites\", \"\"], [1, \"container\"], [1, \"card\"], [\"onerror\", \"this.src='assets/generic_user_photo.png'\", \"alt\", \"Member photo\", 3, \"src\", 4, \"ngIf\"], [\"src\", \"assets/generic_user_photo.png\", \"alt\", \"Member photo\", 4, \"ngIf\"], [1, \"name\"], [1, \"birthdate\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"websites\", 4, \"ngIf\", \"ngIfElse\"], [\"onerror\", \"this.src='assets/generic_user_photo.png'\", \"alt\", \"Member photo\", 3, \"src\"], [\"src\", \"assets/generic_user_photo.png\", \"alt\", \"Member photo\"], [2, \"margin-top\", \"-16px\", \"font-size\", \"13px\"], [1, \"websites\"], [3, \"href\", 4, \"ngIf\"], [3, \"href\"]],\n  template: function MemberDetailComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, MemberDetailComponent_div_0_Template, 13, 7, \"div\", 0);\n      i0.ɵɵtemplate(1, MemberDetailComponent_ng_template_1_Template, 2, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(3, MemberDetailComponent_ng_template_3_Template, 3, 0, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.memberLoaded && ctx.partiesLoaded && ctx.websitesLoaded)(\"ngIfElse\", _r1);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf],\n  styles: [\".name[_ngcontent-%COMP%] {\\n    font-size: 24px;\\n    font-weight: 600;\\n    font-family: \\\"Helvetica\\\", sans-serif;\\n    margin-top: 16px;\\n}\\n\\n.birthdate[_ngcontent-%COMP%] {\\n    font-family: \\\"Helvetica\\\", sans-serif;\\n    font-size: 13px;\\n    font-weight: 800;\\n    color: rgba(0, 0, 0, 0.5);\\n    margin-top: 5px;\\n}\\n\\na[_ngcontent-%COMP%]:link {\\n    text-decoration: none;\\n    font-family: \\\"Helvetica\\\", sans-serif;\\n}\\n\\np[_ngcontent-%COMP%] {\\n    font-family: \\\"Helvetica\\\", sans-serif;\\n    font-size: 15px;\\n    line-height: 150%;\\n    color: rgba(0, 0, 0, 0.5);\\n}\\n\\nh3[_ngcontent-%COMP%] {\\n    margin-block-start: 4px;\\n    margin-block-end: 4px;\\n    font-family: \\\"Helvetica\\\", sans-serif;\\n    font-size: 18px;\\n    color: rgba(0, 0, 0, 0.5);\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n    align-items: center;\\n    background-color: #FFFFFF;\\n    border: 1px solid rgba(0, 0, 0, 0.1);\\n    border-radius: 12px;\\n    box-shadow: rgba(0, 0, 0, 0.02) 0 1px 3px 0;\\n    color: rgba(0, 0, 0, 0.85);\\n    cursor: pointer;\\n    display: inline-flex;\\n    font-family: \\\"Helvetica\\\", sans-serif;\\n    font-size: 14px;\\n    font-weight: 600;\\n    justify-content: center;\\n    line-height: 1.25;\\n    margin-top: 6px;\\n    margin-bottom: 6px;\\n    padding: calc(.875rem - 1px) calc(1.5rem - 1px);\\n    position: relative;\\n    vertical-align: baseline;\\n    width: 225px;\\n    height: 35px;\\n}\\n\\nbutton[_ngcontent-%COMP%]:hover, button[_ngcontent-%COMP%]:focus {\\n    border-color: rgba(0, 0, 0, 0.15);\\n    box-shadow: rgba(0, 0, 0, 0.1) 0 4px 12px;\\n    color: rgba(0, 0, 0, 0.5);\\n}\\n\\nbutton[_ngcontent-%COMP%]:hover {\\n    transform: translateY(-1px);\\n}\\n\\nbutton[_ngcontent-%COMP%]:active {\\n    background-color: #F0F0F1;\\n    border-color: rgba(0, 0, 0, 0.15);\\n    box-shadow: rgba(0, 0, 0, 0.06) 0 2px 4px;\\n    color: rgba(0, 0, 0, 0.5);\\n    transform: translateY(0);\\n}\\n\\nbody[_ngcontent-%COMP%] {\\n    background-color: #eaeff1;\\n    font-family: \\\"Helvetica\\\", sans-serif;\\n}\\n\\nimg[_ngcontent-%COMP%] {\\n    margin-top: 15px;\\n    width: 225px;\\n    height: 150px;\\n    border-radius: 12px;\\n    object-fit: cover;\\n}\\n\\n.container[_ngcontent-%COMP%] {\\n    max-width: 300px;\\n    margin-left: 10px;\\n}\\n\\n.card[_ngcontent-%COMP%] {\\n    height: auto;\\n    text-align: center;\\n    background-color: #f7f7f7;\\n    padding: 12px;\\n    margin: 12px;\\n    border-radius: 12px;\\n    box-shadow: 0 20px 40px -15px rgba(0, 0, 0, 0.5);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbWVtYmVyLWRldGFpbC9tZW1iZXItZGV0YWlsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLG9DQUFvQztJQUNwQyxnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxvQ0FBb0M7SUFDcEMsZUFBZTtJQUNmLGdCQUFnQjtJQUNoQix5QkFBeUI7SUFDekIsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLHFCQUFxQjtJQUNyQixvQ0FBb0M7QUFDeEM7O0FBRUE7SUFDSSxvQ0FBb0M7SUFDcEMsZUFBZTtJQUNmLGlCQUFpQjtJQUNqQix5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSx1QkFBdUI7SUFDdkIscUJBQXFCO0lBQ3JCLG9DQUFvQztJQUNwQyxlQUFlO0lBQ2YseUJBQXlCO0FBQzdCOztBQUVBO0lBQ0ksbUJBQW1CO0lBQ25CLHlCQUF5QjtJQUN6QixvQ0FBb0M7SUFDcEMsbUJBQW1CO0lBQ25CLDJDQUEyQztJQUMzQywwQkFBMEI7SUFDMUIsZUFBZTtJQUNmLG9CQUFvQjtJQUNwQixvQ0FBb0M7SUFDcEMsZUFBZTtJQUNmLGdCQUFnQjtJQUNoQix1QkFBdUI7SUFDdkIsaUJBQWlCO0lBQ2pCLGVBQWU7SUFDZixrQkFBa0I7SUFDbEIsK0NBQStDO0lBQy9DLGtCQUFrQjtJQUNsQix3QkFBd0I7SUFDeEIsWUFBWTtJQUNaLFlBQVk7QUFDaEI7O0FBRUE7O0lBRUksaUNBQWlDO0lBQ2pDLHlDQUF5QztJQUN6Qyx5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSwyQkFBMkI7QUFDL0I7O0FBRUE7SUFDSSx5QkFBeUI7SUFDekIsaUNBQWlDO0lBQ2pDLHlDQUF5QztJQUN6Qyx5QkFBeUI7SUFDekIsd0JBQXdCO0FBQzVCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLG9DQUFvQztBQUN4Qzs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixZQUFZO0lBQ1osYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksWUFBWTtJQUNaLGtCQUFrQjtJQUNsQix5QkFBeUI7SUFDekIsYUFBYTtJQUNiLFlBQVk7SUFDWixtQkFBbUI7SUFDbkIsZ0RBQWdEO0FBQ3BEIiwic291cmNlc0NvbnRlbnQiOlsiLm5hbWUge1xuICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICBmb250LXdlaWdodDogNjAwO1xuICAgIGZvbnQtZmFtaWx5OiBcIkhlbHZldGljYVwiLCBzYW5zLXNlcmlmO1xuICAgIG1hcmdpbi10b3A6IDE2cHg7XG59XG5cbi5iaXJ0aGRhdGUge1xuICAgIGZvbnQtZmFtaWx5OiBcIkhlbHZldGljYVwiLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICBmb250LXdlaWdodDogODAwO1xuICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7XG4gICAgbWFyZ2luLXRvcDogNXB4O1xufVxuXG5hOmxpbmsge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBmb250LWZhbWlseTogXCJIZWx2ZXRpY2FcIiwgc2Fucy1zZXJpZjtcbn1cblxucCB7XG4gICAgZm9udC1mYW1pbHk6IFwiSGVsdmV0aWNhXCIsIHNhbnMtc2VyaWY7XG4gICAgZm9udC1zaXplOiAxNXB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNTAlO1xuICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7XG59XG5cbmgzIHtcbiAgICBtYXJnaW4tYmxvY2stc3RhcnQ6IDRweDtcbiAgICBtYXJnaW4tYmxvY2stZW5kOiA0cHg7XG4gICAgZm9udC1mYW1pbHk6IFwiSGVsdmV0aWNhXCIsIHNhbnMtc2VyaWY7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7XG59XG5cbmJ1dHRvbiB7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgICBib3JkZXItcmFkaXVzOiAxMnB4O1xuICAgIGJveC1zaGFkb3c6IHJnYmEoMCwgMCwgMCwgMC4wMikgMCAxcHggM3B4IDA7XG4gICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC44NSk7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICAgIGZvbnQtZmFtaWx5OiBcIkhlbHZldGljYVwiLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBmb250LXdlaWdodDogNjAwO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjI1O1xuICAgIG1hcmdpbi10b3A6IDZweDtcbiAgICBtYXJnaW4tYm90dG9tOiA2cHg7XG4gICAgcGFkZGluZzogY2FsYyguODc1cmVtIC0gMXB4KSBjYWxjKDEuNXJlbSAtIDFweCk7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbiAgICB3aWR0aDogMjI1cHg7XG4gICAgaGVpZ2h0OiAzNXB4O1xufVxuXG5idXR0b246aG92ZXIsXG5idXR0b246Zm9jdXMge1xuICAgIGJvcmRlci1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjE1KTtcbiAgICBib3gtc2hhZG93OiByZ2JhKDAsIDAsIDAsIDAuMSkgMCA0cHggMTJweDtcbiAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpO1xufVxuXG5idXR0b246aG92ZXIge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMXB4KTtcbn1cblxuYnV0dG9uOmFjdGl2ZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0YwRjBGMTtcbiAgICBib3JkZXItY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4xNSk7XG4gICAgYm94LXNoYWRvdzogcmdiYSgwLCAwLCAwLCAwLjA2KSAwIDJweCA0cHg7XG4gICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41KTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG59XG5cbmJvZHkge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNlYWVmZjE7XG4gICAgZm9udC1mYW1pbHk6IFwiSGVsdmV0aWNhXCIsIHNhbnMtc2VyaWY7XG59XG5cbmltZyB7XG4gICAgbWFyZ2luLXRvcDogMTVweDtcbiAgICB3aWR0aDogMjI1cHg7XG4gICAgaGVpZ2h0OiAxNTBweDtcbiAgICBib3JkZXItcmFkaXVzOiAxMnB4O1xuICAgIG9iamVjdC1maXQ6IGNvdmVyO1xufVxuXG4uY29udGFpbmVyIHtcbiAgICBtYXgtd2lkdGg6IDMwMHB4O1xuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xufVxuXG4uY2FyZCB7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjdmN2Y3O1xuICAgIHBhZGRpbmc6IDEycHg7XG4gICAgbWFyZ2luOiAxMnB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDEycHg7XG4gICAgYm94LXNoYWRvdzogMCAyMHB4IDQwcHggLTE1cHggcmdiYSgwLCAwLCAwLCAwLjUpO1xufVxuXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["DatePipe","CacheService","i0","MemberDetailComponent","constructor","route","ParliamentScot","datePipe","ngOnInit","id","snapshot","paramMap","get","resolveMember","then","data","MemberFullname","ParliamentaryName","MemberBirthDate","transform","BirthDate","MemberPhotoURL","PhotoURL","memberLoaded","resolveMemberParties","inCharge","memberPartiesData","filter","memberParties","PersonID","memberPartiesIds","Array","fromDates","toDates","memberPartyData","push","PartyID","ValidFromDate","ValidUntilDate","Date","sort","memberPartiesIdsRed","fromDatesRed","toDatesRed","i","length","memberPartiesNames","fromDatesStr","toDatesStr","resolveParties","forEach","memberPartyId","party","find","ID","ActualName","partiesLoaded","MemberParties","MemberFromDates","MemberToDates","resolveWebsites","websitesData","websites","website1URL","WebSiteTypeID","website2URL","website3URL","MemberWebsiteGov","WebURL","MemberWebsitePersonal","websitesLoaded","cache","console","log","Promise","resolve","getMember","subscribe","set","getMemberParties","getParties","getWebsites","selectors","features","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/azel/Desktop/Assignment5/padalino-scot-parliament/src/app/member-detail/member-detail.component.ts","/Users/azel/Desktop/Assignment5/padalino-scot-parliament/src/app/member-detail/member-detail.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {DatePipe} from '@angular/common';\n\nimport {ParliamentScotService} from '../services/parliament-scot.service';\nimport {CacheService} from \"../services/cache.service\";\n\n@Component({\n    selector: 'app-member-detail',\n    templateUrl: './member-detail.component.html',\n    styleUrls: ['./member-detail.component.css'],\n    providers: [DatePipe]\n})\n\nexport class MemberDetailComponent implements OnInit {\n\n    // info about the member to display detail of\n    MemberFullname!: string;\n    MemberBirthDate!: string | null;\n    MemberPhotoURL!: string;\n\n    MemberParties!: any[];\n    MemberFromDates!: string[];\n    MemberToDates!: string[];\n\n    MemberWebsiteGov!: string;\n    MemberWebsitePersonal!: string;\n\n    // used to check if all data is loaded and template can be displayed\n    memberLoaded = false;\n    partiesLoaded = false;\n    websitesLoaded = false;\n\n    cache = CacheService;\n\n    constructor(\n        private route: ActivatedRoute,\n        private ParliamentScot: ParliamentScotService,\n        public datePipe: DatePipe\n    ) {\n    }\n\n    ngOnInit(): void {\n\n        const id = this.route.snapshot.paramMap.get('id');\n\n        if (id != null) {\n\n            // resolve (:fetch from cache or APIs) all data needed to display\n\n            this.resolveMember(id).then(data => {\n\n                // get the member's name, birthdate and photo using getMember()\n\n                this.MemberFullname = data.ParliamentaryName;\n                this.MemberBirthDate = this.datePipe.transform(data.BirthDate, \"MMMM dd, yyyy\")\n                this.MemberPhotoURL = data.PhotoURL;\n\n                this.memberLoaded = true;  // all basic member info has been handled\n\n            });\n\n            this.resolveMemberParties(id).then(data => {\n\n                // get the list of Parties the member has been in using getMemberParties() and getParties\n\n                let inCharge: boolean;  // to check if we need to change the last toDate with \"present\"\n\n                let memberPartiesData = data.filter((memberParties: { PersonID: string; }) => memberParties.PersonID == id);\n\n                let memberPartiesIds = new Array<number>;\n                let fromDates = new Array<Date>;\n                let toDates = new Array<Date>;\n\n                for (let memberPartyData of memberPartiesData) {\n\n                    memberPartiesIds.push(memberPartyData.PartyID);\n\n                    fromDates.push(memberPartyData.ValidFromDate);\n\n                    if (memberPartyData.ValidUntilDate != null) {\n                        toDates.push(memberPartyData.ValidUntilDate);\n                    } else {\n                        // if still in the party, set the toDate to current date instead of null\n                        inCharge = true;\n                        toDates.push(new Date());\n                    }\n\n                }\n\n                // fromDates and toDates may come unsorted! Better do the following\n\n                fromDates = fromDates.sort();\n                toDates = toDates.sort();\n\n                // if some parties listed are \"contiguous\", merge them into a single item\n\n                let memberPartiesIdsRed = new Array<any>;\n                let fromDatesRed = new Array<any>;\n                let toDatesRed = new Array<any>;\n\n                for (let i = 0; i < memberPartiesIds.length; i++) {\n\n                    if (memberPartiesIds[i] != memberPartiesIds[i - 1]) {\n                        fromDatesRed.push(fromDates[i]);\n                        memberPartiesIdsRed.push(memberPartiesIds[i]);\n                    }\n\n                    if (memberPartiesIds[i] != memberPartiesIds[i + 1]) {\n                        toDatesRed.push(toDates[i]);\n                    }\n\n                }\n\n                // dates are converted to string and party ids to party names\n\n                let memberPartiesNames = new Array<string>;\n                let fromDatesStr = new Array<string>;\n                let toDatesStr = new Array<string>;\n\n                this.resolveParties().then(data => {\n\n                    memberPartiesIdsRed.forEach((memberPartyId, i) => {\n                        let party = data.find((party: { ID: number; }) => party.ID == memberPartyId);\n\n                        memberPartiesNames.push(party.ActualName);\n                        fromDatesStr.push(<string>this.datePipe.transform(fromDatesRed[i], \"MM/yyyy\"));\n                        toDatesStr.push(<string>this.datePipe.transform(toDatesRed[i], \"MM/yyyy\"));\n\n                    });\n\n                    // if the member is currently in the party, set the toDate to \"present\"\n                    if (inCharge) {\n                        toDatesStr[toDatesStr.length - 1] = \"present\";\n                    }\n\n                    this.partiesLoaded = true;  // all the parties data has been handled\n\n                });\n\n                // finally assign all the data to the variables to be used in the template\n\n                this.MemberParties = memberPartiesNames;\n                this.MemberFromDates = fromDatesStr;\n                this.MemberToDates = toDatesStr;\n\n            });\n\n            this.resolveWebsites().then(data => {\n\n                let websitesData = data.filter((websites: { PersonID: string; }) => websites.PersonID == id);\n\n                let website1URL = websitesData.filter((websitesData: { WebSiteTypeID: number; }) => websitesData.WebSiteTypeID == 1);\n                let website2URL = websitesData.filter((websitesData: { WebSiteTypeID: number; }) => websitesData.WebSiteTypeID == 2);\n                let website3URL = websitesData.filter((websitesData: { WebSiteTypeID: number; }) => websitesData.WebSiteTypeID == 3);\n\n                // the first 2 urls, if both available, redirect to the same gov. website\n\n                if (website2URL.length > 0) {\n                    this.MemberWebsiteGov = website2URL[0].WebURL;\n                }\n                if (website1URL.length > 0) {\n                    this.MemberWebsiteGov = website1URL[0].WebURL;\n                }\n                if (website3URL.length > 0) {\n                    this.MemberWebsitePersonal = website3URL[0].WebURL;\n                }\n\n                this.websitesLoaded = true;  // all websites data has been handled\n\n            });\n\n        }\n\n    }\n\n    resolveMember(id: string) {\n\n        /* Wrap getMember() and make use of caching */\n\n        if (this.cache.get('memberData-' + id)) {\n\n            console.log('[INFO] Member data found in cache, using cached data.');\n\n            return Promise.resolve(this.cache.get('memberData-' + id));\n\n        } else {\n\n            console.log('[INFO] Member data not found in cache, fetching data.');\n\n            return new Promise(resolve => {\n                this.ParliamentScot.getMember(id)\n                    .subscribe(data => {\n\n                        this.cache.set('memberData-' + id, data);\n                        resolve(data)\n\n                    });\n            });\n\n        }\n    }\n\n    resolveMemberParties(id: string) {\n\n        /* Wrap getMemberParties() and make use of caching */\n\n        if (this.cache.get('memberPartiesData-' + id)) {\n\n            console.log('[INFO] Member parties list found in cache, using cached data.');\n\n            return Promise.resolve(this.cache.get('memberPartiesData-' + id));\n\n        } else {\n\n            console.log('[INFO] Member parties list not found in cache, fetching data.');\n\n            return new Promise(resolve => {\n                this.ParliamentScot.getMemberParties(id)\n                    .subscribe(data => {\n\n                        this.cache.set('memberPartiesData-' + id, data);\n                        resolve(data)\n\n                    });\n            });\n\n        }\n    }\n\n    resolveParties() {\n\n        /* Wrap getParties() and make use of caching */\n\n        if (this.cache.get('partiesData')) {\n\n            console.log('[INFO] Parties list found in cache, using cached data.');\n\n            return Promise.resolve(this.cache.get('partiesData'));\n\n        } else {\n\n            console.log('[INFO] Parties list not found in cache, fetching data.');\n\n            return new Promise(resolve => {\n                this.ParliamentScot.getParties()\n                    .subscribe(data => {\n\n                        this.cache.set('partiesData', data);\n                        resolve(data)\n\n                    });\n            });\n\n        }\n    }\n\n    resolveWebsites() {\n\n        /* Wrap getWebsites() and make use of caching */\n\n        if (this.cache.get('websitesData')) {\n\n            console.log('[INFO] Websites list found in cache, using cached data.');\n\n            return Promise.resolve(this.cache.get('websitesData'));\n\n        } else {\n\n            console.log('[INFO] Websites list not found in cache, fetching data.');\n\n            return new Promise(resolve => {\n                this.ParliamentScot.getWebsites()\n                    .subscribe(data => {\n\n                        this.cache.set('websitesData', data);\n                        resolve(data)\n\n                    });\n            });\n\n        }\n    }\n\n}\n\n\n\n\n\n\n","<div *ngIf=\"memberLoaded && partiesLoaded && websitesLoaded; else isLoading\" class=\"container\">\n\n    <div class=\"card\">\n\n        <img *ngIf=\"MemberPhotoURL\" [src]=\"MemberPhotoURL\" onerror=\"this.src='assets/generic_user_photo.png'\" alt=\"Member photo\">\n        <img *ngIf=\"!MemberPhotoURL\" src=\"assets/generic_user_photo.png\" alt=\"Member photo\"/>\n\n        <div class=\"name\">{{ MemberFullname }}</div>\n\n        <div class=\"birthdate\">{{ MemberBirthDate }}</div>\n\n        <br>\n\n        <h3>Parties:</h3>\n\n        <div *ngFor=\"let party of MemberParties; let i = index\">\n            <p><b>{{party}}</b></p>\n            <p style=\"margin-top: -16px; font-size: 13px\">from {{MemberFromDates[i]}} to {{MemberToDates[i]}}</p>\n        </div>\n\n        <div class=\"websites\" *ngIf=\"MemberWebsiteGov || MemberWebsitePersonal; else noWebsites\">\n            <a *ngIf=\"MemberWebsiteGov\" href=\"{{ MemberWebsiteGov }}\">\n                <button>parliament website</button>\n            </a>\n\n            <a *ngIf=\"MemberWebsitePersonal\" href=\"{{ MemberWebsitePersonal }}\">\n                <button>personal website</button>\n            </a>\n        </div>\n\n    </div>\n\n</div>\n\n<ng-template #isLoading>\n    <p>Loading member data...</p>\n</ng-template>\n\n<ng-template #noWebsites>\n    <p><i>No websites available</i></p>\n</ng-template>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}